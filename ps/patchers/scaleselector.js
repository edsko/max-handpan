/**
 * Functions that max expects to be present when the file is loaded
 */

/**
 * Registered message handlers
 *
 * @see anything
 */
var messageHandlers = {};

/**
 * Respond to messages
 *
 * Max expects <code>anything</code> to be present when the JavaScript is
 * loaded. We <i>can</i> override it later, but since it must be present, we
 * might as well make use of it. On the PureScript side, we will update
 * <code>messageHandlers</code>, and we will read it here.
 */
function anything() {
  if(messageHandlers[inlet] !== undefined && typeof(messageHandlers[inlet][messagename]) === 'function') {
    messageHandlers[inlet][messagename](arguments);
  } else {
    throw ("anything: Unexpected message " + messagename + " on inlet " + inlet + "\n");
  }
}
// Generated by purs bundle 0.14.0
var PS = {};
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Data.Boolean"] = $PS["Data.Boolean"] || {};
  var exports = $PS["Data.Boolean"];
  var otherwise = true;
  exports["otherwise"] = otherwise;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Data.Enum"] = $PS["Data.Enum"] || {};
  var exports = $PS["Data.Enum"];
  var Cardinality = function (x) {
      return x;
  };
  exports["Cardinality"] = Cardinality;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Data.Functor"] = $PS["Data.Functor"] || {};
  var exports = $PS["Data.Functor"];                 
  var Functor = function (map) {
      this.map = map;
  };
  var map = function (dict) {
      return dict.map;
  };
  exports["Functor"] = Functor;
  exports["map"] = map;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Data.Generic.Rep"] = $PS["Data.Generic.Rep"] || {};
  var exports = $PS["Data.Generic.Rep"];             
  var Inl = (function () {
      function Inl(value0) {
          this.value0 = value0;
      };
      Inl.create = function (value0) {
          return new Inl(value0);
      };
      return Inl;
  })();
  var Inr = (function () {
      function Inr(value0) {
          this.value0 = value0;
      };
      Inr.create = function (value0) {
          return new Inr(value0);
      };
      return Inr;
  })();
  var NoArguments = (function () {
      function NoArguments() {

      };
      NoArguments.value = new NoArguments();
      return NoArguments;
  })();
  var Generic = function (from, to) {
      this.from = from;
      this.to = to;
  };
  var Constructor = function (x) {
      return x;
  };
  var to = function (dict) {
      return dict.to;
  };
  var from = function (dict) {
      return dict.from;
  };
  exports["Generic"] = Generic;
  exports["to"] = to;
  exports["from"] = from;
  exports["NoArguments"] = NoArguments;
  exports["Inl"] = Inl;
  exports["Inr"] = Inr;
  exports["Constructor"] = Constructor;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Data.Maybe"] = $PS["Data.Maybe"] || {};
  var exports = $PS["Data.Maybe"];
  var Data_Functor = $PS["Data.Functor"];          
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  var functorMaybe = new Data_Functor.Functor(function (v) {
      return function (v1) {
          if (v1 instanceof Just) {
              return new Just(v(v1.value0));
          };
          return Nothing.value;
      };
  });
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
  exports["functorMaybe"] = functorMaybe;
})(PS);
(function(exports) {
  "use strict";

  // module Unsafe.Coerce

  exports.unsafeCoerce = function (x) {
    return x;
  };
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Unsafe.Coerce"] = $PS["Unsafe.Coerce"] || {};
  var exports = $PS["Unsafe.Coerce"];
  var $foreign = $PS["Unsafe.Coerce"];
  exports["unsafeCoerce"] = $foreign.unsafeCoerce;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Safe.Coerce"] = $PS["Safe.Coerce"] || {};
  var exports = $PS["Safe.Coerce"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                
  var coerce = function (dictCoercible) {
      return Unsafe_Coerce.unsafeCoerce;
  };
  exports["coerce"] = coerce;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Data.Newtype"] = $PS["Data.Newtype"] || {};
  var exports = $PS["Data.Newtype"];
  var Safe_Coerce = $PS["Safe.Coerce"];
  var unwrap = function (dictNewtype) {
      return Safe_Coerce.coerce();
  };
  exports["unwrap"] = unwrap;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Data.Enum.Generic"] = $PS["Data.Enum.Generic"] || {};
  var exports = $PS["Data.Enum.Generic"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Enum = $PS["Data.Enum"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var GenericBoundedEnum = function (genericCardinality$prime, genericFromEnum$prime, genericToEnum$prime) {
      this["genericCardinality'"] = genericCardinality$prime;
      this["genericFromEnum'"] = genericFromEnum$prime;
      this["genericToEnum'"] = genericToEnum$prime;
  };
  var genericToEnum$prime = function (dict) {
      return dict["genericToEnum'"];
  };
  var genericToEnum = function (dictGeneric) {
      return function (dictGenericBoundedEnum) {
          var $90 = Data_Functor.map(Data_Maybe.functorMaybe)(Data_Generic_Rep.to(dictGeneric));
          var $91 = genericToEnum$prime(dictGenericBoundedEnum);
          return function ($92) {
              return $90($91($92));
          };
      };
  };
  var genericFromEnum$prime = function (dict) {
      return dict["genericFromEnum'"];
  };
  var genericFromEnum = function (dictGeneric) {
      return function (dictGenericBoundedEnum) {
          var $101 = genericFromEnum$prime(dictGenericBoundedEnum);
          var $102 = Data_Generic_Rep.from(dictGeneric);
          return function ($103) {
              return $101($102($103));
          };
      };
  };
  var genericCardinality$prime = function (dict) {
      return dict["genericCardinality'"];
  };
  var genericBoundedEnumSum = function (dictGenericBoundedEnum) {
      return function (dictGenericBoundedEnum1) {
          return new GenericBoundedEnum(Data_Enum.Cardinality(Data_Newtype.unwrap()(genericCardinality$prime(dictGenericBoundedEnum)) + Data_Newtype.unwrap()(genericCardinality$prime(dictGenericBoundedEnum1)) | 0), function (v) {
              if (v instanceof Data_Generic_Rep.Inl) {
                  return genericFromEnum$prime(dictGenericBoundedEnum)(v.value0);
              };
              if (v instanceof Data_Generic_Rep.Inr) {
                  return genericFromEnum$prime(dictGenericBoundedEnum1)(v.value0) + Data_Newtype.unwrap()(genericCardinality$prime(dictGenericBoundedEnum)) | 0;
              };
              throw new Error("Failed pattern match at Data.Enum.Generic (line 87, column 22 - line 89, column 80): " + [ v.constructor.name ]);
          }, function (n) {
              var to = function (v) {
                  if (n >= 0 && n < v) {
                      return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Generic_Rep.Inl.create)(genericToEnum$prime(dictGenericBoundedEnum)(n));
                  };
                  if (Data_Boolean.otherwise) {
                      return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Generic_Rep.Inr.create)(genericToEnum$prime(dictGenericBoundedEnum1)(n - v | 0));
                  };
                  throw new Error("Failed pattern match at Data.Enum.Generic (line 83, column 5 - line 83, column 43): " + [ v.constructor.name ]);
              };
              return to(genericCardinality$prime(dictGenericBoundedEnum));
          });
      };
  };
  var genericBoundedEnumNoArguments = new GenericBoundedEnum(1, function (v) {
      return 0;
  }, function (i) {
      var $87 = i === 0;
      if ($87) {
          return new Data_Maybe.Just(Data_Generic_Rep.NoArguments.value);
      };
      return Data_Maybe.Nothing.value;
  });
  var genericBoundedEnumConstructor = function (dictGenericBoundedEnum) {
      return new GenericBoundedEnum(Data_Newtype.unwrap()(genericCardinality$prime(dictGenericBoundedEnum)), function (v) {
          return genericFromEnum$prime(dictGenericBoundedEnum)(v);
      }, function (i) {
          return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Generic_Rep.Constructor)(genericToEnum$prime(dictGenericBoundedEnum)(i));
      });
  };
  exports["genericToEnum"] = genericToEnum;
  exports["genericFromEnum"] = genericFromEnum;
  exports["genericBoundedEnumNoArguments"] = genericBoundedEnumNoArguments;
  exports["genericBoundedEnumConstructor"] = genericBoundedEnumConstructor;
  exports["genericBoundedEnumSum"] = genericBoundedEnumSum;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Data.Show"] = $PS["Data.Show"] || {};
  var exports = $PS["Data.Show"];
  var Show = function (show) {
      this.show = show;
  }; 
  var show = function (dict) {
      return dict.show;
  };
  exports["Show"] = Show;
  exports["show"] = show;
})(PS);
(function(exports) {
  "use strict";

  exports.intercalate = function (separator) {
    return function (xs) {
      var len = xs.length;
      if (len === 0) return "";

      var res = xs[0];
      for (var i = 1; i < len; i++) {
        res = res + separator + xs[i];
      }
      return res;
    };
  };
})(PS["Data.Show.Generic"] = PS["Data.Show.Generic"] || {});
(function(exports) {
  "use strict";

  exports.concatArray = function (xs) {
    return function (ys) {
      if (xs.length === 0) return ys;
      if (ys.length === 0) return xs;
      return xs.concat(ys);
    };
  };
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Data.Semigroup"] = $PS["Data.Semigroup"] || {};
  var exports = $PS["Data.Semigroup"];
  var $foreign = $PS["Data.Semigroup"];
  var Semigroup = function (append) {
      this.append = append;
  }; 
  var semigroupArray = new Semigroup($foreign.concatArray);
  var append = function (dict) {
      return dict.append;
  };
  exports["append"] = append;
  exports["semigroupArray"] = semigroupArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Data.Symbol"] = $PS["Data.Symbol"] || {};
  var exports = $PS["Data.Symbol"];
  var IsSymbol = function (reflectSymbol) {
      this.reflectSymbol = reflectSymbol;
  };
  var reflectSymbol = function (dict) {
      return dict.reflectSymbol;
  };
  exports["IsSymbol"] = IsSymbol;
  exports["reflectSymbol"] = reflectSymbol;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Type.Proxy"] = $PS["Type.Proxy"] || {};
  var exports = $PS["Type.Proxy"];
  var $$Proxy = (function () {
      function $$Proxy() {

      };
      $$Proxy.value = new $$Proxy();
      return $$Proxy;
  })();
  exports["Proxy"] = $$Proxy;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Data.Show.Generic"] = $PS["Data.Show.Generic"] || {};
  var exports = $PS["Data.Show.Generic"];
  var $foreign = $PS["Data.Show.Generic"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Type_Proxy = $PS["Type.Proxy"];                
  var GenericShowArgs = function (genericShowArgs) {
      this.genericShowArgs = genericShowArgs;
  };
  var GenericShow = function (genericShow$prime) {
      this["genericShow'"] = genericShow$prime;
  };
  var genericShowArgsNoArguments = new GenericShowArgs(function (v) {
      return [  ];
  });
  var genericShowArgs = function (dict) {
      return dict.genericShowArgs;
  };
  var genericShowConstructor = function (dictGenericShowArgs) {
      return function (dictIsSymbol) {
          return new GenericShow(function (v) {
              var ctor = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
              var v1 = genericShowArgs(dictGenericShowArgs)(v);
              if (v1.length === 0) {
                  return ctor;
              };
              return "(" + ($foreign.intercalate(" ")(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ ctor ])(v1)) + ")");
          });
      };
  };
  var genericShow$prime = function (dict) {
      return dict["genericShow'"];
  }; 
  var genericShowSum = function (dictGenericShow) {
      return function (dictGenericShow1) {
          return new GenericShow(function (v) {
              if (v instanceof Data_Generic_Rep.Inl) {
                  return genericShow$prime(dictGenericShow)(v.value0);
              };
              if (v instanceof Data_Generic_Rep.Inr) {
                  return genericShow$prime(dictGenericShow1)(v.value0);
              };
              throw new Error("Failed pattern match at Data.Show.Generic (line 26, column 1 - line 28, column 40): " + [ v.constructor.name ]);
          });
      };
  };
  var genericShow = function (dictGeneric) {
      return function (dictGenericShow) {
          return function (x) {
              return genericShow$prime(dictGenericShow)(Data_Generic_Rep.from(dictGeneric)(x));
          };
      };
  };
  exports["genericShow"] = genericShow;
  exports["genericShowArgsNoArguments"] = genericShowArgsNoArguments;
  exports["genericShowSum"] = genericShowSum;
  exports["genericShowConstructor"] = genericShowConstructor;
})(PS);
(function(exports) {
  exports.fromMaxIntImpl = function(x) {
    if(typeof(x) === 'number') {
      return x;
    } else {
      throw ( "fromMaxIntImpl: Argument "
            + x
            + " has unexpected type "
            + typeof(x)
            + " (expected Int)\n"
            );
    }
  }

  exports.maxError = function(err) {
     error(err, "\n");
     return null;
  }
})(PS["MaxForLive.Conversions"] = PS["MaxForLive.Conversions"] || {});
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["MaxForLive.Conversions"] = $PS["MaxForLive.Conversions"] || {};
  var exports = $PS["MaxForLive.Conversions"];
  var $foreign = $PS["MaxForLive.Conversions"];
  var Data_Enum_Generic = $PS["Data.Enum.Generic"];
  var Data_Maybe = $PS["Data.Maybe"];                      
  var SimpleEnum = function (fromSimpleEnum, toSimpleEnum) {
      this.fromSimpleEnum = fromSimpleEnum;
      this.toSimpleEnum = toSimpleEnum;
  };
  var FromMax = function (fromMax) {
      this.fromMax = fromMax;
  };
  var toSimpleEnum = function (dict) {
      return dict.toSimpleEnum;
  };    
  var maxFromJust = function (v) {
      if (v instanceof Data_Maybe.Just) {
          return v.value0;
      };
      if (v instanceof Data_Maybe.Nothing) {
          return $foreign.maxError("maxFromJust");
      };
      throw new Error("Failed pattern match at MaxForLive.Conversions (line 127, column 1 - line 127, column 38): " + [ v.constructor.name ]);
  };
  var genericToSimpleEnum = function (dictGeneric) {
      return function (dictGenericBoundedEnum) {
          var $18 = Data_Enum_Generic.genericToEnum(dictGeneric)(dictGenericBoundedEnum);
          return function ($19) {
              return maxFromJust($18($19));
          };
      };
  };
  var genericFromSimpleEnum = function (dictGeneric) {
      return function (dictGenericBoundedEnum) {
          return Data_Enum_Generic.genericFromEnum(dictGeneric)(dictGenericBoundedEnum);
      };
  };                                                          
  var fromMaxInt = new FromMax($foreign.fromMaxIntImpl);
  var fromMax = function (dict) {
      return dict.fromMax;
  };    
  var maxToEnum = function (dictSimpleEnum) {
      var $25 = toSimpleEnum(dictSimpleEnum);
      var $26 = fromMax(fromMaxInt);
      return function ($27) {
          return $25($26($27));
      };
  };
  exports["FromMax"] = FromMax;
  exports["fromMax"] = fromMax;
  exports["SimpleEnum"] = SimpleEnum;
  exports["genericToSimpleEnum"] = genericToSimpleEnum;
  exports["genericFromSimpleEnum"] = genericFromSimpleEnum;
  exports["maxToEnum"] = maxToEnum;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Backend.Note"] = $PS["Backend.Note"] || {};
  var exports = $PS["Backend.Note"];
  var Data_Enum_Generic = $PS["Data.Enum.Generic"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Show = $PS["Data.Show"];
  var Data_Show_Generic = $PS["Data.Show.Generic"];
  var Data_Symbol = $PS["Data.Symbol"];
  var MaxForLive_Conversions = $PS["MaxForLive.Conversions"];                
  var C = (function () {
      function C() {

      };
      C.value = new C();
      return C;
  })();
  var Cs = (function () {
      function Cs() {

      };
      Cs.value = new Cs();
      return Cs;
  })();
  var D = (function () {
      function D() {

      };
      D.value = new D();
      return D;
  })();
  var Ds = (function () {
      function Ds() {

      };
      Ds.value = new Ds();
      return Ds;
  })();
  var E = (function () {
      function E() {

      };
      E.value = new E();
      return E;
  })();
  var F = (function () {
      function F() {

      };
      F.value = new F();
      return F;
  })();
  var Fs = (function () {
      function Fs() {

      };
      Fs.value = new Fs();
      return Fs;
  })();
  var G = (function () {
      function G() {

      };
      G.value = new G();
      return G;
  })();
  var Gs = (function () {
      function Gs() {

      };
      Gs.value = new Gs();
      return Gs;
  })();
  var A = (function () {
      function A() {

      };
      A.value = new A();
      return A;
  })();
  var As = (function () {
      function As() {

      };
      As.value = new As();
      return As;
  })();
  var B = (function () {
      function B() {

      };
      B.value = new B();
      return B;
  })();
  var genericNote = new Data_Generic_Rep.Generic(function (x) {
      if (x instanceof C) {
          return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
      };
      if (x instanceof Cs) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value));
      };
      if (x instanceof D) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)));
      };
      if (x instanceof Ds) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))));
      };
      if (x instanceof E) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)))));
      };
      if (x instanceof F) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))))));
      };
      if (x instanceof Fs) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)))))));
      };
      if (x instanceof G) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))))))));
      };
      if (x instanceof Gs) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)))))))));
      };
      if (x instanceof A) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))))))))));
      };
      if (x instanceof As) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)))))))))));
      };
      if (x instanceof B) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value)))))))))));
      };
      throw new Error("Failed pattern match at Backend.Note (line 18, column 1 - line 18, column 46): " + [ x.constructor.name ]);
  }, function (x) {
      if (x instanceof Data_Generic_Rep.Inl) {
          return C.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
          return Cs.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {
          return D.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inl))) {
          return Ds.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))) {
          return E.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))) {
          return F.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))) {
          return Fs.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))) {
          return G.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))))) {
          return Gs.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))))) {
          return A.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))))))) {
          return As.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr)))))))))) {
          return B.value;
      };
      throw new Error("Failed pattern match at Backend.Note (line 18, column 1 - line 18, column 46): " + [ x.constructor.name ]);
  });
  var showNote = new Data_Show.Show(Data_Show_Generic.genericShow(genericNote)(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "C";
  })))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "Cs";
  })))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "D";
  })))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "Ds";
  })))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "E";
  })))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "F";
  })))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "Fs";
  })))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "G";
  })))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "Gs";
  })))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "A";
  })))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "As";
  })))(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "B";
  })))))))))))))));
  var simpleEnumNote = new MaxForLive_Conversions.SimpleEnum(MaxForLive_Conversions.genericFromSimpleEnum(genericNote)(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))))))))))))), MaxForLive_Conversions.genericToSimpleEnum(genericNote)(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))))))))))))));
  var fromMaxNote = new MaxForLive_Conversions.FromMax(MaxForLive_Conversions.maxToEnum(simpleEnumNote));
  exports["showNote"] = showNote;
  exports["fromMaxNote"] = fromMaxNote;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Backend.Scale"] = $PS["Backend.Scale"] || {};
  var exports = $PS["Backend.Scale"];
  var Data_Enum_Generic = $PS["Data.Enum.Generic"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Show = $PS["Data.Show"];
  var Data_Show_Generic = $PS["Data.Show.Generic"];
  var Data_Symbol = $PS["Data.Symbol"];
  var MaxForLive_Conversions = $PS["MaxForLive.Conversions"];                
  var Kurd9 = (function () {
      function Kurd9() {

      };
      Kurd9.value = new Kurd9();
      return Kurd9;
  })();
  var Hijaz = (function () {
      function Hijaz() {

      };
      Hijaz.value = new Hijaz();
      return Hijaz;
  })();
  var genericScale = new Data_Generic_Rep.Generic(function (x) {
      if (x instanceof Kurd9) {
          return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
      };
      if (x instanceof Hijaz) {
          return new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value);
      };
      throw new Error("Failed pattern match at Backend.Scale (line 20, column 1 - line 20, column 48): " + [ x.constructor.name ]);
  }, function (x) {
      if (x instanceof Data_Generic_Rep.Inl) {
          return Kurd9.value;
      };
      if (x instanceof Data_Generic_Rep.Inr) {
          return Hijaz.value;
      };
      throw new Error("Failed pattern match at Backend.Scale (line 20, column 1 - line 20, column 48): " + [ x.constructor.name ]);
  });
  var showScale = new Data_Show.Show(Data_Show_Generic.genericShow(genericScale)(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "Kurd9";
  })))(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "Hijaz";
  })))));
  var simpleEnumScale = new MaxForLive_Conversions.SimpleEnum(MaxForLive_Conversions.genericFromSimpleEnum(genericScale)(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))), MaxForLive_Conversions.genericToSimpleEnum(genericScale)(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))));
  var fromMaxScale = new MaxForLive_Conversions.FromMax(MaxForLive_Conversions.maxToEnum(simpleEnumScale));
  exports["showScale"] = showScale;
  exports["fromMaxScale"] = fromMaxScale;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Data.Function"] = $PS["Data.Function"] || {};
  var exports = $PS["Data.Function"];
  var $$const = function (a) {
      return function (v) {
          return a;
      };
  };
  exports["const"] = $$const;
})(PS);
(function(exports) {
  "use strict";

  exports.runFn2 = function (fn) {
    return function (a) {
      return function (b) {
        return fn(a, b);
      };
    };
  };
})(PS["Data.Function.Uncurried"] = PS["Data.Function.Uncurried"] || {});
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Data.Function.Uncurried"] = $PS["Data.Function.Uncurried"] || {};
  var exports = $PS["Data.Function.Uncurried"];
  var $foreign = $PS["Data.Function.Uncurried"];
  exports["runFn2"] = $foreign.runFn2;
})(PS);
(function(exports) {
  "use strict";

  exports.mkEffectFn1 = function mkEffectFn1(fn) {
    return function(x) {
      return fn(x)();
    };
  };
})(PS["Effect.Uncurried"] = PS["Effect.Uncurried"] || {});
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Effect.Uncurried"] = $PS["Effect.Uncurried"] || {};
  var exports = $PS["Effect.Uncurried"];
  var $foreign = $PS["Effect.Uncurried"];
  exports["mkEffectFn1"] = $foreign.mkEffectFn1;
})(PS);
(function(exports) {
  exports.getArgImpl = function(arguments, i) {
    if(i < arguments.length) {
      return arguments[i];
    } else {
      throw ( "getArgImpl: Argument "
            + i
            + " out of range ("
            + arguments.length
            + ")\n"
            );
    }
  }
})(PS["MaxForLive.Arguments"] = PS["MaxForLive.Arguments"] || {});
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["MaxForLive.Arguments"] = $PS["MaxForLive.Arguments"] || {};
  var exports = $PS["MaxForLive.Arguments"];
  var $foreign = $PS["MaxForLive.Arguments"];
  var Data_Function_Uncurried = $PS["Data.Function.Uncurried"];
  var MaxForLive_Conversions = $PS["MaxForLive.Conversions"];                
  var getArg = function (dictFromMax) {
      return function (xs) {
          var $1 = MaxForLive_Conversions.fromMax(dictFromMax);
          var $2 = Data_Function_Uncurried.runFn2($foreign.getArgImpl)(xs);
          return function ($3) {
              return $1($2($3));
          };
      };
  };
  exports["getArg"] = getArg;
})(PS);
(function(exports) {
  /**
 * Instead of using <code>EffectFn</code>, we do the wrapping manually.
 * The reason is that Max's JavaScript environment is a little weird, and it
 * it treats <code>post</code> special; this works just fine:
 *
 * <code>
 * var fn = function(x) {
 *   post("This is some other function", x, "\n");
 * }
 *
 * var fnRenamed = fn;
 * fnRenamed(2);
 * </code>
 *
 * but this does not:
 *
 * <code>
 * var postRenamed = post;
 * postRenamed("bye\n");
 * </code>
 */  
  exports.post = function(msg) {
    return function() {
      if(typeof post === 'function')
        post(msg);
      else if(typeof console.log === 'function')
        console.log(msg);
    }
  }

  exports.setInlets = function(numInlets) {
    return function() {
      inlets = numInlets;
    }
  }

  exports.setOutlets = function(numOutlets) {
    return function() {
      outlets = numOutlets;
    }
  }

  exports.setInletAssist = function(inlet) {
    return function(assist) {
      return function() {
        setinletassist(inlet, assist);
      }
    }
  }
})(PS["MaxForLive.Global"] = PS["MaxForLive.Global"] || {});
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["MaxForLive.Global"] = $PS["MaxForLive.Global"] || {};
  var exports = $PS["MaxForLive.Global"];
  var $foreign = $PS["MaxForLive.Global"];                                   
  var postLn = function (str) {
      return $foreign.post(str + "\x0a");
  };
  exports["postLn"] = postLn;
  exports["setInlets"] = $foreign.setInlets;
  exports["setOutlets"] = $foreign.setOutlets;
  exports["setInletAssist"] = $foreign.setInletAssist;
})(PS);
(function(exports) {
  exports.setHandlerImpl = function(inlet, message, handler) {
    if(messageHandlers[inlet] === undefined) {
      messageHandlers[inlet] = {};
    }

    messageHandlers[inlet][message] = handler;
  }
})(PS["MaxForLive.Handlers"] = PS["MaxForLive.Handlers"] || {});
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["MaxForLive.Handlers"] = $PS["MaxForLive.Handlers"] || {};
  var exports = $PS["MaxForLive.Handlers"];
  var $foreign = $PS["MaxForLive.Handlers"];
  var Data_Function = $PS["Data.Function"];
  var Effect_Uncurried = $PS["Effect.Uncurried"];
  var MaxForLive_Arguments = $PS["MaxForLive.Arguments"];                
  var InvokeHandler = function (invokeHandler) {
      this.invokeHandler = invokeHandler;
  };
  var invokeNoArgs = new InvokeHandler(function (_i) {
      return Data_Function["const"];
  });
  var invokeHandler = function (dict) {
      return dict.invokeHandler;
  };
  var invokeWithArg = function (dictFromMax) {
      return function (dictInvokeHandler) {
          return new InvokeHandler(function (i) {
              return function (f) {
                  return function (xs) {
                      return invokeHandler(dictInvokeHandler)(i + 1 | 0)(f(MaxForLive_Arguments.getArg(dictFromMax)(xs)(i)))(xs);
                  };
              };
          });
      };
  };
  var setHandler = function (dictInvokeHandler) {
      return function (v) {
          return function () {
              return $foreign.setHandlerImpl(v.inlet, v.msg, Effect_Uncurried.mkEffectFn1(invokeHandler(dictInvokeHandler)(0)(v.handler)));
          };
      };
  };
  exports["setHandler"] = setHandler;
  exports["invokeNoArgs"] = invokeNoArgs;
  exports["invokeWithArg"] = invokeWithArg;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["ScaleSelector"] = $PS["ScaleSelector"] || {};
  var exports = $PS["ScaleSelector"];
  var Backend_Note = $PS["Backend.Note"];
  var Backend_Scale = $PS["Backend.Scale"];
  var Data_Show = $PS["Data.Show"];
  var MaxForLive_Global = $PS["MaxForLive.Global"];
  var MaxForLive_Handlers = $PS["MaxForLive.Handlers"];                
  var setScale = function (scale) {
      return MaxForLive_Global.postLn("setScale " + Data_Show.show(Backend_Scale.showScale)(scale));
  };
  var setRoot = function (root) {
      return MaxForLive_Global.postLn("setRoot " + Data_Show.show(Backend_Note.showNote)(root));
  };
  var setDoum = function (doum) {
      return MaxForLive_Global.postLn("setDoum " + Data_Show.show(Backend_Note.showNote)(doum));
  };
  var main = function __do() {
      MaxForLive_Global.setInlets(3)();
      MaxForLive_Global.setOutlets(1)();
      MaxForLive_Global.setInletAssist(0)("Scale")();
      MaxForLive_Global.setInletAssist(1)("Root")();
      MaxForLive_Global.setInletAssist(2)("Doum")();
      MaxForLive_Handlers.setHandler(MaxForLive_Handlers.invokeWithArg(Backend_Scale.fromMaxScale)(MaxForLive_Handlers.invokeNoArgs))({
          inlet: 0,
          msg: "msg_int",
          handler: setScale
      })();
      MaxForLive_Handlers.setHandler(MaxForLive_Handlers.invokeWithArg(Backend_Note.fromMaxNote)(MaxForLive_Handlers.invokeNoArgs))({
          inlet: 1,
          msg: "msg_int",
          handler: setRoot
      })();
      return MaxForLive_Handlers.setHandler(MaxForLive_Handlers.invokeWithArg(Backend_Note.fromMaxNote)(MaxForLive_Handlers.invokeNoArgs))({
          inlet: 2,
          msg: "msg_int",
          handler: setDoum
      })();
  };
  exports["main"] = main;
})(PS);
PS["ScaleSelector"].main();
/* END */
